import{B as i}from"./index-BBkAQfZn.js";const n=i("appointment",{state:()=>({appointment:{userId:null,caregiverId:null,patientId:null,patientInfo:{},timeType:"continuous",contractConfirmed:!1,status:"Pending",totalPrice:null,locationType:"Home"},continuous:{startDate:"",startTime:"",endDate:"",endTime:""},multi:{multi:{startDate:"",endDate:"",repeatDays:{monday:!1,tuesday:!1,wednesday:!1,thursday:!1,friday:!1,saturday:!1,sunday:!1},timeSlots:[]}},location:{hospitalName:"",hospitalAddress:"",hospitalWardType:"一般病房",hospitalWardNumber:"",hospitalBedNumber:"",hospitalDepartment:"",hospitalTransportNote:"",homeAddress:"",homeTransportNote:""}}),actions:{setPatientInfo(t){this.appointment.patientId=t.patientId,this.appointment.patientInfo={name:t.name||"",gender:t.gender===1?"男":"女",diseases:t.diseases||[],diseaseOther:t.diseaseOther||"",physicalConditions:t.physicalConditions||[],physicalOther:t.physicalOther||"",services:t.services||[],serviceOther:t.serviceOther||""}},setAppointmentBase(t){this.appointment={...this.appointment,...t}},setCaregiverId(t){this.appointment.caregiverId=t},setTime(t,e){this.appointment.timeType=t,t==="continuous"?this.continuous={...e}:t==="multi"&&(this.multi={...e})},setLocationType(t){this.appointment.locationType=t},setHospitalLocation(t){this.location={...this.location,...t}},setHomeLocation(t){this.location={...this.location,...t}},setTotalPrice(t){this.appointment.totalPrice=t},resetAll(){this.$reset()},saveToLocalStorage(){localStorage.setItem("appointmentData",JSON.stringify({appointment:this.appointment,continuous:this.continuous,multi:this.multi,location:this.location}))},loadFromLocalStorage(){const t=localStorage.getItem("appointmentData");if(t){const e=JSON.parse(t);this.appointment=e.appointment||this.appointment,this.continuous=e.continuous||this.continuous,this.multi=e.multi||this.multi,this.location=e.location||this.location}},async submitAppointment(){const t={appointment:{...this.appointment},diseases:[],physicals:[],services:[],continuous:null,multi:null};this.appointment.timeType==="continuous"?t.continuous={startTime:`${this.continuous.startDate}T${this.continuous.startTime}:00`,endTime:`${this.continuous.endDate}T${this.continuous.endTime}:00`}:this.appointment.timeType==="multi"&&(t.multi={startDate:this.multi.startDate,endDate:this.multi.endDate,appointmentTimeMulti:this.multi.timeSlots.map(e=>({startTime:e.startTime,endTime:e.endTime}))});try{const e=await fetch("/api/appointment/full",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)})}catch(e){console.error("Error creating appointment:",e)}}}});export{n as u};
